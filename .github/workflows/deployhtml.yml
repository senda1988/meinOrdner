name: frontend deploy

on: push

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: ssh setup
          run: | 
                mkdir -p ~/.ssh
                echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/meinPrivateKey
                chmod 400 ~/.ssh/meinPrivateKey
                ssh-keyscan -H ${{secrets.EC2_IP}}  >> ~/.ssh/known_hosts  

        - name: cpy project to EC2
          run: |
               ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP}} "mkdir -p /home/ubuntu/frontend"
               scp -i ~/.ssh/meinPrivateKey Dockerfile index.html ubuntu@${{secrets.EC2_IP}}:/home/ubuntu/frontend/
               ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP}} "sudo cp /home/ubuntu/frontend/index.html /var/www/html/index.html"


    docker-test-job:
      runs-on: ubuntu-latest

      steps:
            - name: ssh setup
              run: | 
                    mkdir -p ~/.ssh
                    echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/meinPrivateKey
                    chmod 400 ~/.ssh/meinPrivateKey
                    ssh-keyscan -H ${{secrets.EC2_IP}}  >> ~/.ssh/known_hosts 
                
            - name: install docker
              run: |
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP}} "sudo apt update"
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP}} "sudo apt install docker.io -y"
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP}} "sudo usermod -aG docker ubuntu"

            - name: start nginx container on ec2 instance
              run: ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP}} "docker run -d -p 8081:80 nginx"